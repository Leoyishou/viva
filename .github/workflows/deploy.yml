name: Deploy Viva Project

on:
  push:
    branches:
      - main          # 生产环境部署
  # pull_request:       # 添加 PR 触发器
  #   branches:
  #     - main

jobs:
  test:   # 自动化测试的内容（现在写了个必过的，以后再优化）
    runs-on: ubuntu-latest
    steps:
      - name: Always pass
        run: echo "Tests passed successfully!"
          
  deploy:
    needs: test       # 需要先跑自动化测试
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 30  # 增加超时时间
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        uses: ndeloof/install-compose-action@v0.0.1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Enable BuildKit  # BuildKit 是 Docker 的新一代构建引擎，提供了许多优化，能更快构建
        run: |
          # 启用 BuildKit
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
          echo "COMPOSE_DOCKER_CLI_BUILD=1" >> $GITHUB_ENV

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker-compose push

      - name: Copy docker-compose and config files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_B_HOST }}
          username: ${{ secrets.SERVER_B_USERNAME }}
          password: ${{ secrets.SERVER_B_PASSWORD }}
          source: "docker-compose.yml,ssl/,viva-frontend/nginx.conf"
          target: "/home/viva.liugongzi.org/viva"
          strip_components: 0

      # 1. 先检查工作目录内容
      - name: List workspace contents
        run: |
          echo "Workspace contents:"
          ls -la
          
      # 2. 复制文件到服务器
      - name: Copy project files
        uses: appleboy/scp-action@master  # scp-action代表能复制文件到服务器
        with:
          host: ${{ secrets.SERVER_B_HOST }}
          username: ${{ secrets.SERVER_B_USERNAME }}
          password: ${{ secrets.SERVER_B_PASSWORD }}
          source: "docker-compose.yml,viva-backend/,viva-frontend/"  # 包含所有需要的文件
          target: "/home/lighthouse/viva"
          strip_components: 0

      # 3. SSH 部署
      - name: Deploy to Server B
        uses: appleboy/ssh-action@master   # ssh-action代表能上服务器做操作
        with:
          host: ${{ secrets.SERVER_B_HOST }}
          username: ${{ secrets.SERVER_B_USERNAME }}
          password: ${{ secrets.SERVER_B_PASSWORD }}
          script: |
            echo "Starting deployment..."
            cd /home/lighthouse/viva
            
            # 强制重新构建后端容器
            echo "Rebuilding backend container..."
            docker-compose build --no-cache backend
            
            # 停止旧容器
            echo "Stopping old containers..."
            docker-compose down
            
            # 启动新容器
            echo "Starting new containers..."
            docker-compose up -d
            
            # 检查后端容器日志
            echo "Checking backend logs..."
            docker logs viva-backend-1
            
            echo "Deployment completed" 

      - name: Build and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_B_HOST }}
          username: ${{ secrets.SERVER_B_USERNAME }}
          password: ${{ secrets.SERVER_B_PASSWORD }}
          script_stop: true  # 添加这行确保脚本出错时停止
          command_timeout: 30m  # 增加命令超时时间 